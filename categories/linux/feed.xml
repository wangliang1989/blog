<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Pacblog</title>
    <link>http://blog.wangliang.one/categories/linux/</link>
    <description>Recent content in Linux on Pacblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 14 Jan 2016 20:49:45 +0800</lastBuildDate>
    <atom:link href="http://blog.wangliang.one/categories/linux/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Centos 7 设置快捷键</title>
      <link>http://blog.wangliang.one/archives/centos-shortkey/</link>
      <pubDate>Thu, 14 Jan 2016 20:49:45 +0800</pubDate>
      
      <guid>http://blog.wangliang.one/archives/centos-shortkey/</guid>
      <description>&lt;p&gt;点击 &lt;code&gt;应用程序-系统工具-设置-键盘-快捷键-自定义快捷键&lt;/code&gt;。
点击 &lt;code&gt;+&lt;/code&gt; 号就增加新的快捷键。
名称处填写这个快捷键的名字，命令填写执行这个快捷键时传给 shell 的命令。
完成后，点确定。
这时，还没有设置快捷键。
&lt;strong&gt;鼠标右键单击&lt;code&gt;禁用&lt;/code&gt;&lt;/strong&gt;，输入你想要的快捷键即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux 数据备份</title>
      <link>http://blog.wangliang.one/archives/Linux-data-sync/</link>
      <pubDate>Tue, 05 Jan 2016 15:34:05 +0800</pubDate>
      
      <guid>http://blog.wangliang.one/archives/Linux-data-sync/</guid>
      <description>

&lt;h2 id=&#34;为什么要做数据备份&#34;&gt;为什么要做数据备份&lt;/h2&gt;

&lt;p&gt;我在 2016 年 1 月 4 日，在一个错误的地方执行了一个 perl 脚本，脚本中包含了&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;foreach my $dir (&#39;gmt&#39;, &#39;loc&#39;, &#39;model&#39;, &#39;time&#39;, &#39;viewer&#39;, &#39;obs&#39;){
    chdir &amp;quot;./$dir&amp;quot;;
    foreach (glob &amp;quot;*.*&amp;quot;) {
        unlink $_ if ($_ ne &#39;tibet.obs&#39;);
    }
    chdir &amp;quot;../&amp;quot;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为没有叫 gmt 这些名称的目录，又没有使用die终止脚本，所以这个脚本删除了目录内所有文件。
幸好，其中只有些我最不喜欢看的文献和一些临时文件，损失还算不大。
如果这个删除命令对文件夹有效。那么我一个半月来除了写的脚本在远程有备份外，其他所有工作就灰飞烟灭了。&lt;/p&gt;

&lt;h2 id=&#34;如何做数据备份&#34;&gt;如何做数据备份&lt;/h2&gt;

&lt;p&gt;用 rsync。rsync 是 Linux 上很强大很流行的一个远程备份软件。
如果没有可以用来备份的服务器，可以备份到本地的移动硬盘上：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rsync -a --delete --progress ./text /run/media/peterpan/Elements/rsync
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这句话会把当前文件夹下的 text 同步到叫 Elements 的移动硬盘下的 rsync 目录内。
注意，这个命令会确保目标处的文件内容和源的保持完全相同。如果目标处的文件格式不支持权限，就会跳过。
一般移动硬盘是 NFTS 格式，所以不支持 Linux 的文件权限概念，文件的可执行权限不会被保持。
我写了三个脚本，以便自动执行：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wangliang1989/scripts/blob/master/sync/server.pl&#34;&gt;同步指定路径到远程服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wangliang1989/scripts/blob/master/sync/sync.pl&#34;&gt;同步指定路径到移动硬盘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wangliang1989/scripts/blob/master/sync/passport.pl&#34;&gt;同步主目录所有内容到移动硬盘&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>gedit 的使用</title>
      <link>http://blog.wangliang.one/archives/use-gedit/</link>
      <pubDate>Mon, 14 Dec 2015 15:34:05 +0800</pubDate>
      
      <guid>http://blog.wangliang.one/archives/use-gedit/</guid>
      <description>

&lt;p&gt;gedit 是 GNOME 下默认的编辑器。在 GNOME 3 以后，GNOME 小组做商业化的迷梦，认为平板才是未来。
为了适应平板的操作，gedit 的功能遭到了大幅缩减。真是自毁长城！
而且，因为架构变动，想自行编译 gedit 也将越来越困难。和 gedit 说再见的时候到了！&lt;/p&gt;

&lt;p&gt;如果，你继续使用 GNOME 2，那么以下内容对你依然有用。&lt;/p&gt;

&lt;h2 id=&#34;gedit-的插件包&#34;&gt;gedit 的插件包&lt;/h2&gt;

&lt;p&gt;gedit-plugins是一个插件包，提供很多有用的插件。&lt;/p&gt;

&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;

&lt;p&gt;Ubuntu：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install gedit-plugins
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Centos：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install gedit-plugins
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用&#34;&gt;使用&lt;/h3&gt;

&lt;p&gt;gedit-plugins提供如下功能：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Smart Spaces: Forget you&amp;rsquo;re not using tabulations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;按Tab键，输出的是多个空格。&lt;/li&gt;
&lt;li&gt;在首选项的插件选项卡内选中智能空格，然后在编辑器选项卡内设置。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Embedded Terminal: Embed a terminal in the bottompane.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;内嵌的terminal，只能有一个terminal。&lt;/li&gt;
&lt;li&gt;在首选项的插件选项卡内选中嵌入终端，然后在菜单栏里的查看下拉菜单里选中底部面板。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Show/Hide Tabbar: Add a menu entry to show/hide the tabbar.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Join/Split Lines: Join several lines or splitlongones&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;合并/分割行。&lt;/li&gt;
&lt;li&gt;按Ctrl+J可以合并行。分割行是Shift+Ctrl+J，但是似乎无效。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Color Picker: Pick a color from a dialog and insert itshexadecimal representation.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;拾色器。&lt;/li&gt;
&lt;li&gt;在工具菜单内。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;DrawSpaces: Draw Spaces and Tabs&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;特别显示空格与制表符。&lt;/li&gt;
&lt;li&gt;空格会显示为一个小点，制表符是一个箭头。在首选项的插件选项卡内选中绘制空白。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Session Saver: Save and restore your workingsessions&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;会话保存 不过貌似不怎么管用。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Code comment:Comment out or uncomment a selected block ofcode.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;注释代码。&lt;/li&gt;
&lt;li&gt;在首选项的插件选项卡内选中代码注释。使用时，选中想注释的区域，点编辑菜单内的注释代码。取消注释类似。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Bracket Completion: Automatically adds closingbrackets.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;自动的括号补全。&lt;/li&gt;
&lt;li&gt;在首选项的插件选项卡内选中括号补全。似乎不管用，但是可以高亮匹配的括号。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Character Map: Insert special characters justby clicking on them.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;对特殊字符集映射。&lt;/li&gt;
&lt;li&gt;不知道是什么。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;还有很多插件&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;语法高亮功能&#34;&gt;语法高亮功能&lt;/h2&gt;

&lt;p&gt;gedit 的语法高亮功能是借助软件 gtksourceview-3.0 来实现的。
在 &lt;code&gt;/usr/share/gtksourceview-3.0&lt;/code&gt; 下有两个文件夹：&lt;code&gt;language-specs&lt;/code&gt; 和 &lt;code&gt;styles&lt;/code&gt;。
文件夹 &lt;code&gt;language-specs&lt;/code&gt; 下有很多 lang 文件，一种语言对应一个文件。
文件夹 &lt;code&gt;styles&lt;/code&gt; 下有一些 xml 文件。一个 xml 文件就对应一种主题。&lt;/p&gt;

&lt;p&gt;gedit 首先依据 lang 文件确定是哪种语言，以及按这种语言的语法，什么情况着重显示，什么情况属于注释等等。
然后，依据 xml 文件或者说主题最终确定如何显示。你可以修改 lan g文件来修改对某语言的识别方式。&lt;/p&gt;

&lt;h3 id=&#34;增加rst的语法高亮&#34;&gt;增加rST的语法高亮&lt;/h3&gt;

&lt;p&gt;gtksourceview-3.0 并不支持 reStructuredText。
我们只能自己写一个 lang 文件。
这个lang文件放到 &lt;code&gt;/usr/share/gtksourceview-3.0/language-specs&lt;/code&gt; 下是无效的。
这点，还不理解。
lang 文件需要放到这个文件夹下，如果没有这个文件夹，自己创建一个：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~/.local/share/gtksourceview-3.0/language-specs/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我已经准备好 restructuredtext.lang 了，你可以直接下载：
&lt;a href=&#34;https://github.com/wangliang1989/scripts/blob/master/gtksourceview-3.0/restructuredtext.lang&#34;&gt;https://github.com/wangliang1989/scripts/blob/master/gtksourceview-3.0/restructuredtext.lang&lt;/a&gt;
。
注意，第5行到第7行确定了如果文件名结尾是rst，就会识别为rST了。也许你想用其他文件名结尾，你可以自己改。&lt;/p&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;p&gt;我提供的restructuredtext.lang文件内容修改自：
&lt;a href=&#34;https://mail.gnome.org/archives/gedit-list/2011-May/msg00012.html&#34;&gt;https://mail.gnome.org/archives/gedit-list/2011-May/msg00012.html&lt;/a&gt;
并参考了
&lt;a href=&#34;http://codex.wiki/post/135189-866&#34;&gt;http://codex.wiki/post/135189-866&lt;/a&gt;
和
&lt;a href=&#34;http://ubuntuforums.org/showthread.php?t=1868181&#34;&gt;http://ubuntuforums.org/showthread.php?t=1868181&lt;/a&gt;
。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cygwin的安装</title>
      <link>http://blog.wangliang.one/archives/install-cygwin/</link>
      <pubDate>Sat, 21 Nov 2015 12:13:19 +0800</pubDate>
      
      <guid>http://blog.wangliang.one/archives/install-cygwin/</guid>
      <description>

&lt;p&gt;本文介绍如何在 Windows 7 下安装 Cygwin。&lt;/p&gt;

&lt;h2 id=&#34;何为-cygwin&#34;&gt;何为 Cygwin&lt;/h2&gt;

&lt;p&gt;Cygwin 是许多自由软件的集合，最初由 Cygnus Solutions 开发，
用于各种版本的 Microsoft Windows上 ，运行类 UNIX 系统。
Cygwin 的主要目的是通过重新编译，
将 POSIX 系统(例如 Linux、BSD，以及其他 Unix 系统)上的软件移植到 Windows 上。
Cygwin 包括了一套库，该库在 Win32 系统下实现了 POSIX 系统调用的 API；
还有一套 GNU 开发工具集(比如 GCC、GDB)，这样可以进行简单的软件开发；
还有一些 UNIX 系统下的常见程序。&lt;/p&gt;

&lt;p&gt;目前 Cygwin 由 Red Hat 等负责维护。
Red Hat 规定，Cygwin 库必须遵守 GNU 通用公共许可证，但也可以跟符合开源定义的自由软件链接。
否则，须向 Red Hat 购买价格不菲的许可协议，使用 Cygwin 库的专属软件才可再发布。&lt;/p&gt;

&lt;p&gt;用户可以通过&lt;a href=&#34;http://cygwin.com/lists.html&#34;&gt;Cygwin Mailing Lists&lt;/a&gt; 订阅若干个Cygwin相关的邮件列表。&lt;/p&gt;

&lt;h2 id=&#34;下载&#34;&gt;下载&lt;/h2&gt;

&lt;p&gt;根据自己 CPU 的字长选择&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://cygwin.com/setup-x86_64.exe&#34;&gt;64位安装包&lt;/a&gt; 或者 &lt;a href=&#34;https://cygwin.com/setup-x86.exe&#34;&gt;32为安装包&lt;/a&gt; 。&lt;/p&gt;

&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.wangliang.one/img/2015112101.PNG&#34; alt=&#34;&#34; /&gt;
就和一般的软件安装相同，双击exe。但有如下几个步骤需要注意：&lt;/p&gt;

&lt;p&gt;如果你是用的上面的下载链接，下载到的是在线安装包。请选择Install for Internet。运行程序稍后会下载本地安装包：
&lt;img src=&#34;http://blog.wangliang.one/img/2015112102.PNG&#34; alt=&#34;&#34; /&gt;
安装目录不要包含汉字。也不要是根目录：
&lt;img src=&#34;http://blog.wangliang.one/img/2015112103.PNG&#34; alt=&#34;&#34; /&gt;
选择本地安装包存放的位置。默认选择就好了：
&lt;img src=&#34;http://blog.wangliang.one/img/2015112104.PNG&#34; alt=&#34;&#34; /&gt;
选择代理。如果你不知道代理是什么，选Direct Connection：
&lt;img src=&#34;http://blog.wangliang.one/img/2015112105.PNG&#34; alt=&#34;&#34; /&gt;
选择下载站点。如果不知道这是什么，请和图中选择保持一致：
&lt;img src=&#34;http://blog.wangliang.one/img/2015112106.PNG&#34; alt=&#34;&#34; /&gt;
选择要下载的包。
根据你的需求下载。比如要下载gawk，在文本框中输入gawk，然后确保Bin一列的复选框都选中了。
其他如图：
&lt;img src=&#34;http://blog.wangliang.one/img/2015112107.PNG&#34; alt=&#34;&#34; /&gt;
这里列出将要安装的包：
&lt;img src=&#34;http://blog.wangliang.one/img/2015112108.PNG&#34; alt=&#34;&#34; /&gt;
在桌面和开始菜单创建链接。如果你依赖它就选中。如果你不知道什么意思，就都选中吧。
&lt;img src=&#34;http://blog.wangliang.one/img/2015112109.PNG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;添加新的安装包&#34;&gt;添加新的安装包&lt;/h2&gt;

&lt;p&gt;如果发现安装包缺少，可以再打开安装Cygwin的那个exe，仿照之前选包的方式添加
或者你可以看看这个
&lt;a href=&#34;https://github.com/transcode-open/apt-cyg&#34;&gt;https://github.com/transcode-open/apt-cyg&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/Cygwin&#34;&gt;https://zh.wikipedia.org/wiki/Cygwin&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>terminal 和 shell 的使用</title>
      <link>http://blog.wangliang.one/archives/terminal-shell/</link>
      <pubDate>Sat, 21 Nov 2015 12:13:19 +0800</pubDate>
      
      <guid>http://blog.wangliang.one/archives/terminal-shell/</guid>
      <description>

&lt;h2 id=&#34;终端模拟器-和-shell&#34;&gt;终端模拟器 和 shell&lt;/h2&gt;

&lt;h3 id=&#34;终端模拟器&#34;&gt;终端模拟器&lt;/h3&gt;

&lt;p&gt;终端（英语：Computer terminal），是一台电子计算机或者计算机系统，用来让用户输入数据，及显示其计算结果的机器。
终端其实是一种输入输出设备，相对于计算机主机而言属于外设，本身并不提供运算处理功能。
例如，食堂打饭刷卡的那个机器就是一个终端。它本身并不是一台计算机。
但是，可以靠这个终端输入你的一卡通信息到远程计算机，然后返回信息给终端，终端会对你的一卡通余额做修改或者发出鸣音报警你没钱了。&lt;/p&gt;

&lt;p&gt;早期的计算机终端一般是机电的电传打字机。
现代的操作系统如 Linux 和 BSD 上，使用 X Window 这样的图形用户界面时，屏幕上一般有多个与不同应用相关的窗口开着，而不是只有一个与一个单个过程相连的文字流。
这种情况下，用户一般使用终端模拟器，又叫终端模拟程序或者虚拟终端。
这样，用户可以不必使用专门的终端装置来与计算机交换。&lt;/p&gt;

&lt;h3 id=&#34;shell&#34;&gt;shell&lt;/h3&gt;

&lt;p&gt;shell，中文称为壳层，是指为用户提供用户界面的软件，是操作系统内核 (core) 和用户的中介。
普通意义上的 shell 是接受用户输入命令的程序。
它之所以被称作 shell 是因为它隐藏了操作系统低层的细节。
通常将 shell 分为两类：图形界面与命令行。
图形 shell 提供一个图形用户界面（GUI），命令行shell提供一个命令行界面（CLI）。
图形用户界面 GNOME 和KDE就是图形 shell。
这里要介绍的是命令行 shell。&lt;/p&gt;

&lt;h3 id=&#34;为什么要更改系统默认终端模拟器和-shell&#34;&gt;为什么要更改系统默认终端模拟器和 shell&lt;/h3&gt;

&lt;p&gt;终端模拟器就是一个虚拟的输入输出设备，好比软键盘。shell 是操作系统的一层。
好比刷一卡通，食堂里打饭刷卡的是一种终端，图书馆闸机是一种终端，自助借书机是一种终端等等。
终端模拟器也有很多种。同样，shell 也是。
GNOME 界面默认的分别是是 GNOME-terminal 和 bash。
bash 也是绝大多数 GNU/Linux 系统和 Mac 上默认的 shell。&lt;/p&gt;

&lt;p&gt;我们现在要把这二者改为 GNOME-terminator 和 zsh。
理由是:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GNOME-terminator 可以实现分割，这是极为重要的功能&lt;/li&gt;
&lt;li&gt;zsh 的语法几乎完全兼容于 bash&lt;/li&gt;
&lt;li&gt;zsh 的命令补全比 bash 的更好用&lt;/li&gt;
&lt;li&gt;zsh 配置方便&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;zsh&#34;&gt;zsh&lt;/h2&gt;

&lt;h3 id=&#34;zsh-和-oh-my-zsh-的安装&#34;&gt;zsh 和 oh my zsh 的安装&lt;/h3&gt;

&lt;p&gt;安装 zsh：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install zsh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/robbyrussell/oh-my-zsh&#34;&gt;oh my zsh&lt;/a&gt; 是一帮人一起维护的一套 zsh 的配置文件。
稍后我们借助它来配置 zsh。&lt;/p&gt;

&lt;p&gt;安装 oh my zsh：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -L http://install.ohmyz.sh | sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这条命令，做三件事：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;下载 &lt;code&gt;oh my zsh&lt;/code&gt;  到 &lt;code&gt;~/.oh-my-zsh&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;备份已有的zsh配置文件 &lt;code&gt;~/.zshrc&lt;/code&gt; ，并复制新的 &lt;code&gt;.zshrc&lt;/code&gt; 文件&lt;/li&gt;
&lt;li&gt;将当前用户的默认 shell 由 bash 改成 zsh&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;第三步会报错： &lt;code&gt;chsh: &amp;quot;/usr/bin/zsh&amp;quot; is not listed in /etc/shells.&lt;/code&gt; ，需要手动修改默认shell，在终端执行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chsh -s /bin/zsh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;chsh 命令修改的是 login shell，当前用户重新登陆后用户的默认 shell 就从 bash 变成了 zsh。
注意今后环境变量不要写到 &lt;code&gt;.bashrc&lt;/code&gt; 而要写到 &lt;code&gt;.zshrc&lt;/code&gt; 中。在写环境变量时，一定注意自己添加的内容写到后面去。&lt;/p&gt;

&lt;h3 id=&#34;用-oh-my-zsh-配置-zsh&#34;&gt;用 oh-my-zsh 配置 zsh&lt;/h3&gt;

&lt;p&gt;zsh 和 bash 一样，有专门的配置环境变量的文件： &lt;code&gt;~/.zshrc&lt;/code&gt;  。
zsh 所有的配置都保存在其中。
在 &lt;code&gt;.zshrc&lt;/code&gt; 中可以选择喜欢的主题，以及适当数量的插件。
插件太多，机器会变慢&lt;/p&gt;

&lt;p&gt;假设你的安装过程和上面一样，oh-my-zsh 这一套配置文件是放在当前计算机用户的主目录下的，是一个隐藏文件夹。
在 &lt;code&gt;.zshrc&lt;/code&gt; 中有一句话来指定这个位置：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export ZSH=/home/计算机用户名/.oh-my-zsh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你可以根据需要改变这个位置。&lt;/p&gt;

&lt;p&gt;配置主题
++++++++++++++&lt;/p&gt;

&lt;p&gt;在\ &lt;code&gt;.zshrc&lt;/code&gt;\ 中有一句::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ZSH_THEME=&amp;quot;robbyrussell&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这句话指定主题是\ &lt;code&gt;robbyrussell&lt;/code&gt;\ 。这也是zsh的默认主题。改变这个值就可以改变主题。
zsh的所有主题保存在\ &lt;code&gt;/themes&lt;/code&gt;\ 目录下。
你可以看看\ &lt;code&gt;oh my zsh的themes wiki &amp;lt;https://github.com/robbyrussell/oh-my-zsh/wiki/themes&amp;gt;&lt;/code&gt;&lt;em&gt;\ 预览各个主题的效果。
我之前用的主题是\ &lt;code&gt;amuse&lt;/code&gt;\ 。为了效果理想，你应该安装这个字体：\ &lt;code&gt;Powerline fonts &amp;lt;https://codeload.github.com/PeterPanwl/fonts/zip/master&amp;gt;&lt;/code&gt;&lt;/em&gt;\ 。
我现在用的是\ &lt;code&gt;bullet-train&lt;/code&gt;\。这个需要单独安装。&lt;/p&gt;

&lt;p&gt;配置插件
+++++++++
有一些插件可以选用。&lt;/p&gt;

&lt;p&gt;在\ &lt;code&gt;.zshrc&lt;/code&gt;\ 中有一句::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;plugins=(git)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也许这句话在你那里被注释了。这句话是说使用插件git，你可以仿照着，添加其他插件。下面介绍一些插件：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;为git的众多常用命令提供名。比如\ &lt;code&gt;git status&lt;/code&gt;\ 的别名是\ &lt;code&gt;gst&lt;/code&gt;\ ，大大减小了击键数。但该插件中\ &lt;code&gt;git mergetool --no-prompt&lt;/code&gt;\ 的别名是\ &lt;code&gt;gmt&lt;/code&gt;\ ，与 GMT 软件冲突，需要将该插件的目录 git 复制到 custom/plugins 下，然后删除其中的 gmt 别名；&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;命令补全插件: pip, pyenv；&lt;/li&gt;
&lt;li&gt;sudo：按两下\ &lt;code&gt;ESC&lt;/code&gt;\ 即可在当前命令前加上\ &lt;code&gt;sudo&lt;/code&gt;\；&lt;/li&gt;
&lt;li&gt;yum：为常见的yum命令提供别名。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;terminator&#34;&gt;terminator&lt;/h2&gt;

&lt;p&gt;安装terminator::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install terminator
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在配置 terminator 时，注意全局里的 Appearance 的 Unfocsed terminal font brightness 的如果太小，非当前窗口将回变成黑白。
另外可以考虑不选配置里的一般设定的显示标题栏，可以节约一点空间。&lt;/p&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%B5%82%E7%AB%AF&#34;&gt;https://zh.wikipedia.org/wiki/%E7%B5%82%E7%AB%AF&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/Unix_shell&#34;&gt;https://zh.wikipedia.org/wiki/Unix_shell&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://seisman.info/linux-environment-for-seismology-research.html&#34;&gt;http://seisman.info/linux-environment-for-seismology-research.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux 系统的 kernel 管理 与 virtualbox 相关的问题</title>
      <link>http://blog.wangliang.one/archives/manage-kernel/</link>
      <pubDate>Sat, 14 Nov 2015 15:34:05 +0800</pubDate>
      
      <guid>http://blog.wangliang.one/archives/manage-kernel/</guid>
      <description>

&lt;h2 id=&#34;什么是-kernel&#34;&gt;什么是 kernel&lt;/h2&gt;

&lt;p&gt;准确地说，Linux 只是各发行版的核心 (kernel)，而不是一个完整的操作系统。
核心的作用是操作硬件。
那么核心或者说 kernel 究竟是什么呢？
其实，就是一个文件: /boot/vmlinuz-xxx (一部机器上可能有数个核心)。&lt;/p&gt;

&lt;h2 id=&#34;查看机器上有哪些-kernel&#34;&gt;查看机器上有哪些 kernel&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ uname -r
3.10.0-229.20.1.el7.x86_64

$ rpm -qa | grep kernel | sort
kernel-3.10.0-229.11.1.el7.x86_64
kernel-3.10.0-229.14.1.el7.x86_64
kernel-3.10.0-229.20.1.el7.x86_64
kernel-devel-3.10.0-229.11.1.el7.x86_64
kernel-devel-3.10.0-229.14.1.el7.x86_64
kernel-devel-3.10.0-229.20.1.el7.x86_64
kernel-headers-3.10.0-229.20.1.el7.x86_64
kernel-tools-3.10.0-229.20.1.el7.x86_64
kernel-tools-libs-3.10.0-229.20.1.el7.x86_64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第一个命令是查看机器目前使用的核心。
第二个命令是查看有哪些核心。
除了 kernel 外、kernel-devel、kernel-headers 和 kernel-tools这些是用于开发或者一些特别的程序需要。
不同的发行版，除了 kernel 外，其他的命名规则各有不同。
这里有几个 kernel 版本： 3.10.0-229.11.1、3.10.0-229.14.1 和 3.10.0-229.20.1。
目前，正在使用的是 3.10.0-229.20.1。&lt;/p&gt;

&lt;h2 id=&#34;删除不必要的-kernel&#34;&gt;删除不必要的 kernel&lt;/h2&gt;

&lt;p&gt;之前认为，kernel 太多会影响开机速度。
现在据更专业的人士介绍，搜索内核只在生成 grub.cfg 时进行，记录在了配置文件 grub-mkconfig 中，所以多余的内核不会影响开机速度。
这与我的实际感受不同。
无论怎样，用一个 kernel，保留一个 kernel，这确实足够了。
另外，谨慎使用 autoremove命令。有时，a 依赖 b。安装了 a，进而 b 因为依赖安装上了，恰好b也是其他的东西需要的。
有一天 a 被删除，b 可能会被错误地删除。所以不要轻易使用 autoremove。
现在，删除最旧的 kernel：3.10.0-229.11.1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo yum remove kernel-3.10.0-229.11.1.el7.x86_64
$ sudo yum remove kernel-devel-3.10.0-229.11.1.el7.x86_64
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;什么时候删除&#34;&gt;什么时候删除&lt;/h3&gt;

&lt;p&gt;Linux 系统会经常更新 kernel。
在 kernel 更新后，有了超过两个 kernel 就可以考虑删除不必要的 kernel 了。
那么如何知道 kernel 更新了呢？
每次开机时会显示 kernel，发现 kernel 增多后就可以看看是不是有超过两个 kernel 了。
也可以在更新时注意命令行输出。
另外，如果使用了 virtualbox，在 kernel 更新后，虚拟机必须重新编译核心后才能继续使用。
这时，你就知道 kernel 肯定已经更新了。&lt;/p&gt;

&lt;h3 id=&#34;脚本实现&#34;&gt;脚本实现&lt;/h3&gt;

&lt;p&gt;我已经写好一个 Perl 脚本，你可以在这里下载:
&lt;a href=&#34;https://github.com/wangliang1989/scripts/blob/master/manage-kernel/manage-kernel.pl&#34;&gt;https://github.com/wangliang1989/scripts/blob/master/manage-kernel/manage-kernel.pl&lt;/a&gt; 。
注意，如果这个脚本导致不良后果，&lt;strong&gt;我不负责&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&#34;virtualbox-的问题&#34;&gt;Virtualbox 的问题&lt;/h2&gt;

&lt;p&gt;安装 Virtualbox 说是要“安装 Kernel”，其实只需要安装 devel 即可使用：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo yum install kernel-devel
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>PATH环境变量修改总结</title>
      <link>http://blog.wangliang.one/archives/environment-PATH-variable/</link>
      <pubDate>Tue, 10 Nov 2015 21:33:43 +0800</pubDate>
      
      <guid>http://blog.wangliang.one/archives/environment-PATH-variable/</guid>
      <description>

&lt;h2 id=&#34;export-命令&#34;&gt;export 命令&lt;/h2&gt;

&lt;p&gt;export 命令用于设置或显示环境变量。&lt;/p&gt;

&lt;h2 id=&#34;path变量&#34;&gt;PATH变量&lt;/h2&gt;

&lt;p&gt;PATH变量是环境变量中的一个，看下面的export命令理解如何增加PATH变量：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export PATH=${PATH}:/usr/local/texlive/2015/bin/x86_64-linux
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这句话是说：
PATH变量 = 原PATH变量的值 + /usr/local/texlive/2015/bin/x86_64-linux，&lt;code&gt;:&lt;/code&gt; 是加的意思。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>安装ibus和插件</title>
      <link>http://blog.wangliang.one/archives/ibus-centos/</link>
      <pubDate>Mon, 02 Nov 2015 15:34:05 +0800</pubDate>
      
      <guid>http://blog.wangliang.one/archives/ibus-centos/</guid>
      <description>

&lt;h2 id=&#34;安装-ibus-和插件&#34;&gt;安装 ibus 和插件&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ sudo yum install ibus ibus-libpinyin
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;设置&#34;&gt;设置&lt;/h2&gt;

&lt;p&gt;在上部面板的 application 里找 setting，再找 language，然后这样设置：&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;项目&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;语言&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;汉语中国&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;格式&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;中国汉语&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;输入入源&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;intelligent Pinyin&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;重启后注意选择保留原文件夹。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>